definitions:
  models.BooleanRequestModel:
    properties:
      bool:
        example: true
        type: boolean
    type: object
  models.CreateSnippetRequestModel:
    properties:
      content:
        example: This is a sample snippet content
        type: string
      title:
        example: Sample Snippet
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        example: Invalid credentials
        type: string
    type: object
  models.IdResponseModel:
    properties:
      id:
        example: b8bba550-3b82-4fa8-9617-8d3c0ab69989
        type: string
    type: object
  models.LoginRequestModel:
    properties:
      email:
        example: johndoe@johndoe.com
        type: string
      password:
        example: password
        type: string
    type: object
  models.LoginResponseModel:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...
        type: string
      expire_date:
        example: "1970-01-01 00:00:00"
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  models.RefreshTokenRequestModel:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...
        type: string
    type: object
  models.RefreshTokenResponseModel:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...
        type: string
      expire_date:
        example: "1970-01-01 00:00:00"
        type: string
      refresh_token:
        description: Opsiyonel
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...
        type: string
    type: object
  models.RegisterRequestModel:
    properties:
      email:
        example: johndoe@johndoe.com
        type: string
      password:
        example: password
        type: string
      username:
        example: johndoe
        type: string
    type: object
  models.RegisterResponseModel:
    properties:
      id:
        example: b8bba550-3b82-4fa8-9617-8d3c0ab69989
        type: string
    type: object
  models.SnippetResponseModel:
    properties:
      content:
        type: string
      created_date:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      is_public:
        type: boolean
      modified_date:
        type: string
      title:
        type: string
      view_count:
        type: integer
    type: object
  models.UpdateSnippetRequestModel:
    properties:
      content:
        example: Updated snippet content
        type: string
      title:
        example: Updated Snippet
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login
      tags:
      - Auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes an access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RefreshTokenResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh JWT token
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns success message
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User registration
      tags:
      - Auth
  /api/v1/snippet:
    get:
      consumes:
      - application/json
      description: Retrieves all snippets for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SnippetResponseModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user snippets
      tags:
      - Snippet
    post:
      consumes:
      - application/json
      description: Creates a new snippet for the authenticated user
      parameters:
      - description: Snippet data
        in: body
        name: snippet
        required: true
        schema:
          $ref: '#/definitions/models.CreateSnippetRequestModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.IdResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new snippet
      tags:
      - Snippet
  /api/v1/snippet/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a snippet for the authenticated user by ID
      parameters:
      - description: Snippet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a snippet
      tags:
      - Snippet
    get:
      consumes:
      - application/json
      description: Retrieves a snippet for the authenticated user by ID
      parameters:
      - description: Snippet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SnippetResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get snippet by ID
      tags:
      - Snippet
    patch:
      consumes:
      - application/json
      description: Updates a snippet for the authenticated user by ID
      parameters:
      - description: Snippet ID
        in: path
        name: id
        required: true
        type: string
      - description: Snippet IsPublic data
        in: body
        name: snippet_is_public
        required: true
        schema:
          $ref: '#/definitions/models.BooleanRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SnippetResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a snippet
      tags:
      - Snippet
  /api/v1/snippet/{userId}:
    get:
      consumes:
      - application/json
      description: Retrieves all snippets for the authenticated user
      parameters:
      - description: Snippet ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SnippetResponseModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user snippets
      tags:
      - Snippet
swagger: "2.0"
